# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        listen [::]:80;
        server_name 0.0.0.0;

        charset utf-8;
        access_log /var/log/nginx/80.log;

        location / {
            include uwsgi_params;
            # uwsgi_pass http://127.0.0.1:80;
            # uwsgi_pass 127.0.0.1:80;
            uwsgi_pass unix:/tmp/80.sock;

            uwsgi_send_timeout 60s;
            uwsgi_read_timeout 60s;
            uwsgi_connect_timeout 60s;

            client_max_body_size 10m;
            client_body_buffer_size 512k;
        }
    }

   # server {
       # listen 443 ssl http2;
       # listen [::]:443 ssl http2;
       # server_name _;

       # ssl on;
       # ssl_certificate /etc/nginx/server.crt;
       # ssl_certificate_key /etc/nginx/server.key;

       # ssl_session_cache shared:SSL:1m;
       # ssl_session_timeout 10m;
       # ssl_ciphers HIGH:!aNULL:!MD5;
       # ssl_prefer_server_ciphers on;

       # location / {
            # include uwsgi_params;
            # uwsgi_pass http://127.0.0.1:443;
            # uwsgi_pass 127.0.0.1:443;
            # uwsgi_pass unix:/tmp/443.sock;
       # }
   # }
}
